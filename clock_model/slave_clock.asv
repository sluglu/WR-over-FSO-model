classdef slave_clock < wrclock
    properties 
        syntonization_input = 0;     % Correction from SyncE (fractional Î”f, like -5e-6)
    end 

    methods
        function obj = slave_clock(nom_freq, drift_ppb, jitter_std)
            obj@wrclock(nom_freq, drift_ppb, jitter_std);
        end

        function tick(obj, sim_dt)
            % Advance the clock time by 1 tick, applying drift
            obj.frequency = obj.nominal_freq * (1 + obj.drift_ppb * 1e-9) + obj.syntonization_input;
            obj.cycle_count = obj.cycle_count + obj.frequency * sim_dt;
        end

        function apply_freq_correction(obj, correction)
            % Override frequency as if synchronized via SyncE
            obj.syntonization_input = correction;
        end

        function apply_offset_correction(obj, offset_s)
            % Convert offset in seconds to cycles and directly apply it
            cycle_shift = offset_s * obj.frequency;
            obj.cycle_count = obj.cycle_count + cycle_shift;
        end
    end
end